// Generated by IcedCoffeeScript 1.8.0-e
(function() {
  var Promise, utils, _;

  utils = require('pantheon-helpers').utils;

  Promise = require('pantheon-helpers').promise;

  _ = require('underscore');

  module.exports = function(router, api, validation, couchUtils) {
    var doProxyAction;
    doProxyAction = function(proxyActionName, proxyActionFn) {
      return function(req, resp) {
        var actorName, actorPromise, orgDb, promise, teamPromise;
        orgDb = req.couch.use('org_' + req.params.orgId);
        teamPromise = api.teams.getTeam(orgDb, req.params.teamId);
        actorName = req.session.user;
        actorPromise = utils.getActor(couchUtils, actorName);
        promise = Promise.all([actorPromise, teamPromise]).then(function(_arg) {
          var actor, asset, assetId, team;
          actor = _arg[0], team = _arg[1];
          assetId = req.params.assetId;
          asset = _.findWhere(team.rsrcs.moirai.assets, {
            id: assetId
          });
          if (!asset) {
            throw {
              code: 404,
              body: 'asset ' + assetId + ' does not exist'
            };
          }
          validation.proxy_resource(actor, team, 'moirai', 'stop', asset);
          return Promise.resolve([actor, team, action]);
        }).then(function(_arg) {
          var action, actor, team;
          actor = _arg[0], team = _arg[1], action = _arg[2];
          return proxyActionFn(actor, team, action);
        });
        return Promise.sendHttp(promise, resp);
      };
    };
    router.post(':assetId/start', doProxyAction('start', function(actor, team, action) {}));
    return router.post(':assetId/stop', doProxyAction('stop', function(actor, team, action) {}));
  };

}).call(this);
